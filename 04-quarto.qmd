---
title: "04-quarto"
execute: 
  echo: false
  output: false
  warning: false
author: "Milo Coolman"
format:
  html:
    fig-height: 4
    theme: darkly
    toc: true
    embed-resources: true
---

# 4.1 Reproducibility
### Exercises 1-2
1) Quarto is a way to integrate R code with words so as to make writing explanations of your code easier, whereas R Scripts are purely for code, almost like the same as for CS classes where you have to use comments to write any non-code explanations.
2) A Quarto analysis is more reproducible than a base r script because in the quarto document it is much easier to write explanations of what each line of code is doing. Quarto also compiles everything into 1 super easy to read document full of all code, figures, explanations, and any warnings. It also does not allow you to render unless all of the code works properly.

# 4.2 Quarto Files
```{r}
#| echo: false
#| warning: false
#| fig-cap: caption text blah blah
library(tidyverse)
library(knitr)
library(pander)
head(cars) |> kable()
ggplot(data = cars, aes(x = speed, y = dist)) +
  geom_point()
```

```{r}
summary(cars)
```
 fig-height: default is 7
 fig-width: default is 7
 
 _bold This is Bold text_
 _italic This is italic text_
 <youtube.com>
 
# Big Header
### Medium Header
##### Small Header

```{r}
head(mtcars)
```

### Exercises 3-4
```{r}
#| fig-cap: My First Table Caption!!
mtcars |> group_by(cyl) |>
          summarise(mean(mpg))|> 
          kable(digits = 1)
mtcars |> group_by(cyl) |>
          summarise(mean(mpg))|> 
          pander()
```

### Exercise 5
```{r}
## #| echo: true
## #| results: false
library(tidyverse)
head(mtcars)
ggplot(data = mtcars, aes(x = factor(cyl), y = mpg)) +
  geom_boxplot()
```

# 4.3
Change x and y axis labels, add title, add subtitle, add caption using + labs()
x and y axis limits: xlim() + ylim()
Labeling certain points or lines + geom_text() or + geom_label()

```{r}
library(tidyverse)
hpi_df <- read_csv("https://raw.githubusercontent.com/highamm/ds234_quarto/main/data_online/hpi-tidy.csv")
head(hpi_df)

ggplot(data = hpi_df, aes(x = Footprint, y = HappyLifeYears,
                          colour = Region)) +
  geom_point()

ggplot(data = hpi_df, aes(x = Footprint, y = HappyLifeYears,
                          colour = Region)) +
  geom_point() +
  labs(title = "Countries with a Higher Ecological Footprint Tend to Have Citizens with Longer, Happier Lives", 
       ## add title
       subtitle = "HappyLifeYears is a Combination of Life Expectancy and Citizen Well-Being", 
       ## add subtitle (smaller text size than the title)
       caption = "Data Source: http://happyplanetindex.org/countries", 
       ## add caption to the bottom of the figure
       x = "Ecological Footprint", ## change x axis label
       y = "Happy Life Years", ## change y axis label
       colour = "World Region") ## change label of colour legend


ggplot(data = hpi_df, aes(x = Footprint, y = HappyLifeYears,
                          colour = Region)) +
  geom_point() +
  ylim(c(0, 70))

ggplot(data = hpi_df, aes(x = Footprint, y = HappyLifeYears,
                          colour = Region)) +
  geom_point() +
  scale_colour_brewer(palette = "Spectral")

ggplot(data = hpi_df, aes(x = Footprint, y = HappyLifeYears,
                          colour = Region)) +
  geom_point() +
  scale_colour_viridis_d(option = "plasma")

ggplot(data = hpi_df, aes(x = Footprint, y = HappyLifeYears,
                          colour = Region)) +
  geom_point() +
  scale_colour_brewer(palette = "Dark2") +
  geom_text(aes(label = Country))

plot_df <- hpi_df |> group_by(Region) |>
  filter(HPIRank == min(HPIRank))

ggplot(data = hpi_df, aes(x = Footprint, y = HappyLifeYears,
                          colour = Region)) +
  geom_point() +
  scale_colour_brewer(palette = "Dark2") +
  geom_text(data = plot_df, aes(label = Country))

ggplot(data = hpi_df, aes(x = Footprint, y = HappyLifeYears,
                          colour = Region)) +
  geom_point(aes(colour = Region)) +
  scale_colour_brewer(palette = "Dark2") +
  geom_text(data = plot_df, aes(label = Country), show.legend = FALSE)

library(ggrepel)
ggplot(data = hpi_df, aes(x = Footprint, y = HappyLifeYears,
                          colour = Region)) +
  geom_point() +
  scale_colour_brewer(palette = "Dark2") +
  geom_text_repel(data = plot_df, aes(label = Country),
                   show.legend = FALSE) 

ggplot(data = hpi_df, aes(x = Footprint, y = HappyLifeYears, colour = Region)) +
  geom_point() +
  scale_colour_brewer(palette = "Dark2") +
  geom_text_repel(data = plot_df, aes(label = Country), show.legend = FALSE) +
  geom_point(data = plot_df, size = 3, shape = 1, show.legend = FALSE) 

plot_df_us <- hpi_df |>
  filter(Country == "United States of America" | Country == "Denmark")

ggplot(data = hpi_df, aes(x = Footprint, y = HappyLifeYears,
                          colour = Region)) +
  geom_point() +
  scale_colour_brewer(palette = "Dark2") +
  geom_point(data = plot_df_us, size = 3, shape = 1,
             show.legend = FALSE) +
  geom_text_repel(data = plot_df_us, aes(label = Country),
                   show.legend = FALSE)

library(ggthemes)
ggplot(data = hpi_df, aes(x = Footprint, y = HappyLifeYears,
                          colour = Region)) +
  geom_point() +
  scale_colour_brewer(palette = "Dark2") +
  geom_point(data = plot_df_us, size = 3, shape = 1, show.legend = FALSE) +
  geom_text_repel(data = plot_df_us, aes(label = Country), show.legend = FALSE) +
  theme_solarized()

ggplot(data = hpi_df, aes(x = Footprint, y = HappyLifeYears,
                          colour = Region)) +
  geom_point() +
  scale_colour_brewer(palette = "Dark2") +
  geom_point(data = plot_df_us, size = 3, shape = 1, show.legend = FALSE) +
  geom_text_repel(data = plot_df_us, aes(label = Country), show.legend = FALSE) +
  theme_fivethirtyeight()

ggplot(data = hpi_df, aes(x = Footprint, y = HappyLifeYears,
                          colour = Region)) +
  geom_point() +
  scale_colour_brewer(palette = "Dark2") +
  geom_point(data = plot_df_us, size = 3, shape = 1, show.legend = FALSE) +
  geom_text_repel(data = plot_df_us, aes(label = Country), show.legend = FALSE) +
  theme_economist()
```

### Exercise 6
```{r}
library(palmerpenguins)
ggplot(data = penguins, aes(x = bill_length_mm, y = bill_depth_mm,
                            colour = species)) +
  geom_point() +
  geom_smooth(se = FALSE) +
  scale_colour_viridis_d() +
  labs(title = "Penguin Bill Length and Depth by Species",
         x = "Bill Length (mm)",
       y = "Bill Depth (mm)",
       colour = "Species") +
  theme_solarized()
```


# 4.4.1
```{r}
library(gapminder)
country_df <- gapminder
head(country_df)
```

### Class Exercise 1-3, 5-7
```{r}
#| output: true
country_df_oddities <- country_df |> filter(
  (year == 1952 & continent == "Europe" & lifeExp < 50) |
    (year == 1992 & continent == "Africa" & lifeExp < 30) |
       (year == 1977 & continent == "Asia" & lifeExp < 35))

ggplot(data = country_df, aes(x = year, y = lifeExp)) +
  geom_line(aes(colour = continent, group = country), alpha = 0.4) +
  facet_grid(~ continent) +
  labs(title = "Life Expectancy by Year",
       x = "Year",
       y = "Life Expectancy",
       colour = "Continent",
       caption = "The Rwandan Genocide and the Cambodian Civil War caused 
       major dips in life expectancy in these two countries.") +
  scale_colour_viridis_d() +
  geom_text_repel(data = country_df_oddities, aes(label = country, colour = continent), show.legend = FALSE) +
  theme_minimal() +
  theme(legend.position = "bottom")
```

# Your Turn 1
1) Calculations done on excel and conclusion done in word
2) Changing labels and limits on y-axis;
3) Deleting 3 outliers; Could explicitly state he deleted them, but easy to forget that


# Your Turn 2
```{r}
fitness_full <- read_csv("https://raw.githubusercontent.com/highamm/ds234_quarto/main/data_online/higham_fitness_clean.csv")
fitness_full

fitness_full_hmgc <- fitness_full |> 
  filter(Start == "2019-04-14" | Start == "2021-05-24") |>
  mutate(label_var = c("half-marathon", "grand canyon")) |>
  relocate(label_var)
fitness_full_hmgc

ggplot(data = fitness_full, aes(x = dayofyear, y = steps)) + 
  geom_line() +
  geom_text_repel(data = fitness_full_hmgc, aes(label = label_var))
```

# Your Turn 3
```{r}
mtcars <- mtcars |> rownames_to_column() |> rename(car_name = rowname)
mtcars

ggplot(data = mtcars, aes(x = wt, y = mpg)) + 
  geom_point() + 
  geom_text_repel(data = mtcars |> filter(mpg == max(mpg)), 
                  aes(label = car_name))
```

# Your Turn 4
```{r}
ggplot(data = hpi_df, aes(x = Footprint, y = HappyLifeYears,
                          colour = Region)) +
  geom_point() +
  theme(legend.position = "top",
        plot.background = element_rect(fill = "yellow4"),
        panel.grid.major = element_line(colour = "orange"),
        panel.border = element_rect(linetype = "dashed", fill = NA),
        panel.background = element_rect(fill = "brown4"))
```





