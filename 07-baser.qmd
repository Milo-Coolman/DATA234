---
title: "07-baser"
author: "Milo Coolman"
format: 
  html:
    embed-resources: true
---

# 7.1 
```{r}
library(tidyverse)
library(here)
videogame_df <- read_csv(here("data/videogame_clean.csv"))
head(videogame_df)
videogame_small <- videogame_df |> slice(1:100)
ggplot(data = videogame_small, aes(x = release_date, y = price)) +
  geom_point() 
ggplot(data = videogame_small, aes(x = release_date2, y = metascore)) +
  geom_point(aes(colour = price_cat))
```

# 7.2
```{r}
mean(videogame_df$game)
videogame_df |> summarise(maxgame = max(game))
class(videogame_df$meta_cat)
class(as.factor(videogame_df$meta_cat))
videogame_df <- videogame_df |>
  mutate(meta_cat_factor = as.factor(meta_cat))
str(videogame_df$meta_cat_factor)

str(videogame_df$release_date)
str(videogame_df$release_date2)

as.Date(videogame_df$release_date)
#> Error in charToDate(x): character string is not in a standard unambiguous format

median(videogame_df$release_date2, na.rm = TRUE)
mean(videogame_df$release_date2, na.rm = TRUE)

str(videogame_df$price)
str(videogame_df$price_cat)

str(as.factor(videogame_df$price_cat))

videogame_df <- videogame_df |>
  mutate(price_factor = as.factor(price_cat)) 
ggplot(data = videogame_df, aes(x = release_date2, y = metascore)) +
  geom_point(aes(colour = price_factor))

str(videogame_df$playtime_miss)
#>  logi [1:26688] FALSE FALSE FALSE TRUE TRUE FALSE ...

sum(videogame_df$playtime_miss)
mean(videogame_df$playtime_miss)

library(tidyverse)
fitness_df <- read_csv(here("data/higham_fitness_notclean.csv"))
```

### Exercise 1
```{r}
fitness_df
ggplot(data = fitness_df, aes(x = active_cals)) +
  geom_freqpoly(aes(group = weekday, colour = weekday)) +
  theme_minimal()
```

### Exercise 2-3
It could be logical
```{r}
fitness_df <- fitness_df |> mutate(stepgoal_lgl = as.logical(stepgoal))
sum(fitness_df$stepgoal_lgl)
mean(fitness_df$stepgoal_lgl)
```

# 7.3
```{r}
str(videogame_df)
videogame_df[5, 3]

videogame_df[ ,3]
videogame_df[5, ]

videogame_df[ ,3:7]
videogame_df[3:7, ]

videogame_df[ ,c(1, 3, 4)]
videogame_df[c(1, 3, 4), ]

vec1 <- c(1, 3, 2)
vec2 <- c("b", 1, 2)
vec3 <- c(FALSE, FALSE, TRUE)
str(vec1); str(vec2); str(vec3)

videogame_df$metascore

metavec <- videogame_df$metascore
mean(metavec, na.rm = TRUE)

metavec[100]

testlist <- list("a", 4, c(1, 4, 2, 6),
                 tibble(x = c(1, 2), y = c(3, 2)))
testlist
```

### Exercise 4
Slice() and Select()

### Exercise 5
```{r}
first100 <- videogame_df |> arrange(release_date2)

first100[1:16, ]
first100 |> slice(1:16)
```

### Exercise 6
```{r}
videogame_df[ ,c(1,2,3,4,6,7,8,9)]
videogame_df |> select(c(1,2,3,4,6,7,8,9))
```

# 7.4
```{r}
set.seed(15125141)
toy_df <- tibble(xvar = rnorm(100, 3, 4),
                 yvar = rnorm(100, -5, 10),
                 group1 = sample(c("A", "B", "C"), size = 100, replace = TRUE),
                 group2 = sample(c("Place1", "Place2", "Place3"), size = 100,
                                 replace = TRUE))
toy_df

table(toy_df$group1)

table(toy_df$group1, toy_df$group2)

nrow(toy_df)
summary(toy_df$yvar)
```

### Exercise 7
```{r}
summary(videogame_df$metascore)
```


# 7.5
### Class Exercise 1
```{r}
library(tidyverse)
fitness_df <- read_csv(here("data/higham_fitness_notclean.csv"))

weekday_vec <- c(2,3,4,5,6)
weekend_vec <- c(1,7)

fitness_df |> mutate(weekend_ind = if_else(weekday %in% weekend_vec,
                                           true = 1, false = 0))
#> weekday %in% weekend_vec is TRUE if the value of weekday is one of the values
#> contained in weekend_vec
```

### Class Exercise 2
```{r}
toy_df
table(toy_df$group1)
#> 
#>  A  B  C 
#> 27 39 34
#> group_by() |> summarise() |> ????
toy_df |> group_by(group1) |> summarise(n_total = n()) |>
  pivot_wider(names_from = group1, values_from = n_total)

table(toy_df$group1, toy_df$group2)
#>    
#>     Place1 Place2 Place3
#>   A     10      8      9
#>   B      9     20     10
#>   C     10     10     14
#>   group_by() |> summarise() |> ????
toy_df |> group_by(group1, group2) |> summarise(n_total = n()) |>
  pivot_wider(names_from = group2, values_from = n_total)

```


